FROM ubuntu:20.10 AS base_build
WORKDIR /tmp
COPY cmake-3.21.0.tar /tmp/
RUN apt-get update && apt-get install -y --no-install-recommends \
  ssh \
  autoconf \
  clang-format \
  libopenmpi-dev \
  gcc \
  g++ \
  gfortran \
  git \
  make \
  pkg-config \
  zlib1g-dev \
  openssl libcurl4-openssl-dev libssl-dev \
  libglu1-mesa-dev freeglut3-dev mesa-common-dev \
  openssh-server \
  libblas-dev liblapack-dev \
  ca-certificates && \
  ls -a / && \
  rm -rf /var/lib/apt/lists/*
RUN cd /tmp/ && tar -xf cmake-3.21.0.tar && cd cmake-3.21.0 && \
./bootstrap && make -j 4 && make install && \
which cmake


FROM base_build AS hdf5_build
WORKDIR /tpl
COPY hdf5* /tpl/
RUN tar -xf hdf5-1.12.1.tar && cd hdf5-1.12.1/ && \
./configure --prefix=/hdf5 --enable-parallel --with-default-api-version=v18 CC=mpicc CPPFLAGS="-I/usr/include" LDFLAGS="-L/usr/lib -L/usr/lib/x86_64-linux-gnu" LIBS=-lz && \
make -j && make install && \
ls /hdf5 && ls /hdf5/lib

FROM hdf5_build AS netcdf_build
WORKDIR /tpl
COPY netcdf* /tpl/
RUN tar -xf netcdf-c-4.8.0.tar && cd netcdf-c-4.8.0 && \
./configure --prefix=/netcdf-c --disable-dap CC=mpicc CPPFLAGS="-I/usr/include -I/hdf5/include" LDFLAGS="-L/usr/lib -L/usr/lib/x86_64-linux-gnu -L/hdf5/lib" LIBS="-lhdf5 -lhdf5_hl -lz" && \
make -j && make install && \
ls /netcdf-c && ls /netcdf-c/lib

FROM netcdf_build AS vtk_build
WORKDIR /tpl
COPY VTK-8.1.2.tar /tpl/
RUN tar -xf VTK-8.1.2.tar && cd VTK-8.1.2 && mkdir build && cd build && \
cmake \
-DCMAKE_C_COMPILER=mpicc \
-DCMAKE_CXX_COMPILER=mpicxx \
-DCMAKE_INSTALL_PREFIX=/vtk \
-DBUILD_SHARED_LIBS=OFF \
-DCMAKE_BUILD_TYPE=RelWithDebInfo \
-DBUILD_DOCUMENTATION=OFF \
-DBUILD_EXAMPLES=OFF \
-DBUILD_TESTING=OFF \
-DVTK_Group_MPI=ON \
-DVTK_Group_StandAlone=ON \
-DVTK_USE_LARGE_DATA=OFF \
-DVTK_WRAP_JAVA=OFF \
-DVTK_WRAP_PYTHON=OFF \
-DVTK_PYTHON_VERSION=3 \
-DVTK_USE_SYSTEM_ZLIB=OFF \
-DOpenGL_GL_PREFERENCE=GLVND \
.. && \
make -j 4 && make install

FROM vtk_build AS trilinos_build
WORKDIR /tpl
COPY Trilinos-trilinos-release-13-0-1.tar /tpl/
RUN tar -xf Trilinos-trilinos-release-13-0-1.tar && cd Trilinos-trilinos-release-13-0-1 && mkdir build && cd build && \
cmake \
-DCMAKE_C_COMPILER=mpicc \
-DCMAKE_CXX_COMPILER=mpicxx \
-DCMAKE_C_FLAGS="-g -fopenmp" \
-DCMAKE_CXX_FLAGS="-g -fopenmp" \
-DCMAKE_INSTALL_PREFIX=/trilinos \
-DBUILD_SHARED_LIBS=OFF \
-DCMAKE_BUILD_TYPE=RelWithDebInfo \
-DTrilinos_ENABLE_Fortran=OFF \
-DTPL_ENABLE_MPI=ON \
-DTrilinos_ENABLE_OpenMP=ON \
-DKokkos_ENABLE_OPENMP=ON \
-DKokkos_ENABLE_SERIAL=ON \
-DKokkos_ENABLE_CUDA=OFF \
-DTrilinos_ENABLE_ALL_PACKAGES=OFF \
-DTrilinos_ENABLE_ALL_OPTIONAL_PACKAGES=OFF \
-DTrilinos_ENABLE_Teuchos=ON \
-DTrilinos_ENABLE_Kokkos=ON \
-DTrilinos_ENABLE_KokkosCore=ON \
-DTrilinos_ENABLE_KokkosAlgorithms=ON \
-DTrilinos_ENABLE_KokkosKernels=ON \
-DTpetra_INST_SERIAL=ON \
-DKokkos_ENABLE_PROFILING=ON \
-DKokkos_ARCH_HSW=ON \
-DTrilinos_ENABLE_Compadre=ON \
-DTrilinos_ENABLE_Zoltan2=ON \
-DTPL_ENABLE_Netcdf=ON \
-DNetcdf_INCLUDE_DIRS=/netcdf-c/include \
-DNetcdf_LIBRARY_DIRS=/netcdf-c/lib \
-DTrilinos_ENABLE_EXPLICIT_INSTANTIATION=OFF \
/tpl/Trilinos-trilinos-release-13-0-1 && \
make -j 4 && make install

FROM trilinos_build AS yaml_cpp_build
WORKDIR /tpl
COPY yaml-cpp-0.6.3.tar /tpl/
RUN tar -xf yaml-cpp-0.6.3.tar && cd /tpl/yaml-cpp-yaml-cpp-0.6.3 && mkdir build && cd build && \
cmake \
-DCMAKE_INSTALL_PREFIX=/yaml-cpp \
-DCMAKE_C_COMPILER=mpicc \
-DCMAKE_CXX_COMPILER=mpicxx \
-DCMAKE_BUILD_TYPE=RELEASE \
-DBUILD_SHARED_LIBS=OFF \
-DYAML_CPP_BUILD_TOOLS=ON \
/tpl/yaml-cpp-yaml-cpp-0.6.3 && \
make -j 4 && make install

FROM yaml_cpp_build AS spdlog_build
WORKDIR /tpl
COPY spdlog-1.8.5.tar /tpl/
RUN tar -xf spdlog-1.8.5.tar && cd spdlog-1.8.5 && mkdir build && cd build && \
cmake \
-DCMAKE_C_COMPILER=mpicc \
-DCMAKE_CXX_COMPILER=mpicxx \
-DCMAKE_BUILD_TYPE=RELEASE \
-DCMAKE_INSTALL_PREFIX=/spdlog \
-DBUILD_SHARED_LIBS=OFF \
-DSPDLOG_BUILD_EXAMPLES=OFF \
-DSPDLOG_BUILD_TESTS=OFF \
-DSPDLOG_INSTALL=ON \
/tpl/spdlog-1.8.5 && \
make -j 4 && make install

FROM spdlog_build AS boost_build
WORKDIR /tpl
COPY boost_1_77_0.tar.gz /tpl/
RUN tar -xzf boost_1_77_0.tar.gz && cd boost_1_77_0 && \
./bootstrap.sh --prefix=/boost --with-libraries=math && ./b2 -j 4 && \
./b2 install
